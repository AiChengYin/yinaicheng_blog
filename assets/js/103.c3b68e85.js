(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{548:function(_,v,t){"use strict";t.r(v);var a=t(8),r=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"网易クラウド-計費‧出帳システム開発"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网易クラウド-計費‧出帳システム開発"}},[_._v("#")]),_._v(" ⽹易クラウド 計費‧出帳システム開発")]),_._v(" "),v("p",[_._v("私はフルスタック開発エンジニアとして、NetEase Cloud Computing の課金・請求システムの開発および保守業務に携わりました。"),v("br"),_._v("\nこのプロジェクトを通じて、クラウド課金の複雑性を深く理解するとともに、マイクロサービスアーキテクチャや分散システム設計において貴重な経験を積むことができました。"),v("br"),_._v("\n以下では、プロジェクトの技術アーキテクチャ、実装の詳細、そして得られた知見について紹介します。")]),_._v(" "),v("h2",{attrs:{id:"_1-プロジェクト背景と目的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-プロジェクト背景と目的"}},[_._v("#")]),_._v(" 1. プロジェクト背景と目的")]),_._v(" "),v("p",[_._v("NetEase Cloud Computing 事業の急速な拡大に伴い、ユーザーは課金の正確性と請求の迅速性に対してより高い要求を持つようになりました。"),v("br"),_._v("\n既存の課金システムは、マルチ環境・マルチ製品ラインといった複雑なシナリオにおいて、拡張性の不足やデータ処理効率の低下といった課題が顕在化していました。")]),_._v(" "),v("p",[_._v("課金・請求システムの主な目標は以下の通りです：")]),_._v(" "),v("ul",[v("li",[_._v("マルチクラウド環境（パブリッククラウド、プライベートクラウド、専用クラウドなど）における統一課金の実現")]),_._v(" "),v("li",[_._v("従量課金、年額・月額課金など複数の課金モデルに対応")]),_._v(" "),v("li",[_._v("正確で迅速な請求書生成と通知サービスの提供")]),_._v(" "),v("li",[_._v("システムの安定稼働を確保するための監視体制の構築")])]),_._v(" "),v("h2",{attrs:{id:"_2-私の役割と担当範囲"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-私の役割と担当範囲"}},[_._v("#")]),_._v(" 2. 私の役割と担当範囲")]),_._v(" "),v("p",[_._v("本プロジェクトでは、コア開発エンジニアとして以下の業務を担当しました：")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("バックエンドサービス開発")]),_._v("：SpringBoot フレームワークを用いて課金コアサービスを開発。請求計算、データ同期、スケジュールタスクなどを実装。")]),_._v(" "),v("li",[v("strong",[_._v("データ処理最適化")]),_._v("：大規模データ環境での請求計算性能を向上させるため、分割データベース・インデックス最適化などを実施。")]),_._v(" "),v("li",[v("strong",[_._v("システム統合")]),_._v("：NOS、RDS、NVS などのクラウドサービス製品とデータ連携を行い、課金データの正確な収集を保証。")]),_._v(" "),v("li",[v("strong",[_._v("監視システム構築")]),_._v("：Redis を利用したホットデータキャッシュによるビジネス監視設計を担当し、監視クエリ性能を向上。")]),_._v(" "),v("li",[v("strong",[_._v("問題解析と修正")]),_._v("：専用クラウドノードでの請求欠損や割引計算エラーなどの重要問題を特定・修正。")])]),_._v(" "),v("h2",{attrs:{id:"_3-技術スタックとアーキテクチャ"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-技術スタックとアーキテクチャ"}},[_._v("#")]),_._v(" 3. 技術スタックとアーキテクチャ")]),_._v(" "),v("p",[_._v("本プロジェクトはモダンなマイクロサービスアーキテクチャを採用し、主な技術スタックは以下の通りです。")]),_._v(" "),v("h3",{attrs:{id:"バックエンド技術"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#バックエンド技術"}},[_._v("#")]),_._v(" バックエンド技術")]),_._v(" "),v("ul",[v("li",[_._v("SpringBoot + MyBatis：コアサービスフレームワーク")]),_._v(" "),v("li",[_._v("Redis：ホットデータキャッシュ、分散ロック、スロットリング制御")]),_._v(" "),v("li",[_._v("RabbitMQ：サービス間の非同期通信")]),_._v(" "),v("li",[_._v("Elastic-job：分散スケジュールタスク管理")]),_._v(" "),v("li",[_._v("Apollo：分散構成管理")]),_._v(" "),v("li",[_._v("NDC：データ移行および同期")])]),_._v(" "),v("h3",{attrs:{id:"フロントエンド技術"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#フロントエンド技術"}},[_._v("#")]),_._v(" フロントエンド技術")]),_._v(" "),v("ul",[v("li",[_._v("Vue.js および関連エコシステムコンポーネント")]),_._v(" "),v("li",[_._v("Node.js ベースのフロントエンドビルド")])]),_._v(" "),v("h3",{attrs:{id:"データベース"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#データベース"}},[_._v("#")]),_._v(" データベース")]),_._v(" "),v("ul",[v("li",[_._v("MySQL：メインストレージ。複数の業務DB（"),v("code",[_._v("pub_bill_analysis")]),_._v("、"),v("code",[_._v("atlantis")]),_._v("、"),v("code",[_._v("private_cloud_bill_online")]),_._v(" など）を管理")]),_._v(" "),v("li",[_._v("複数データソース設定により異なる環境でのデータアクセスをサポート")])]),_._v(" "),v("h3",{attrs:{id:"デプロイと監視"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#デプロイと監視"}},[_._v("#")]),_._v(" デプロイと監視")]),_._v(" "),v("ul",[v("li",[_._v("Docker コンテナ化デプロイ")]),_._v(" "),v("li",[_._v("Grafana + ECharts によるデータ可視化")])]),_._v(" "),v("p",[_._v("システム全体はレイヤー設計を採用し、メッセージキューによって各サービスモジュールを疎結合化。"),v("br"),_._v("\n分散構成センターによる設定統一管理、およびスケジュールタスクフレームワークを用いた定期的な請求処理を実現。")]),_._v(" "),v("h2",{attrs:{id:"_4-実装と成果"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-実装と成果"}},[_._v("#")]),_._v(" 4. 実装と成果")]),_._v(" "),v("h3",{attrs:{id:"コア機能実装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#コア機能実装"}},[_._v("#")]),_._v(" コア機能実装")]),_._v(" "),v("p",[v("strong",[_._v("日次請求書機能の開発")]),v("br"),_._v("\n業務側の精緻な課金要求に応えるため、"),v("code",[_._v("PaymentDayPeriod")]),_._v(" クラスを拡張し、日次単位での請求期間管理を実現。"),v("br"),_._v("\n関連する請求計算ロジックを再設計しました。")]),_._v(" "),v("p",[v("strong",[_._v("マルチ環境対応")]),v("br"),_._v("\nシステムは "),v("code",[_._v("inner")]),_._v("（パブリッククラウド）、"),v("code",[_._v("jd")]),_._v("（建徳プライベートクラウド）、"),v("code",[_._v("jdbeta")]),_._v("（建徳βクラウド）、"),v("code",[_._v("pri")]),_._v("（内部クラウド1.0）など、複数の環境に対応。"),v("br"),_._v(" "),v("code",[_._v("user_distributor")]),_._v(" テーブルで環境設定を管理。")]),_._v(" "),v("p",[v("strong",[_._v("割引計算の最適化")]),v("br"),_._v("\n割引計算モジュールを再構築し、コストセンター、サービス種別、インスタンスタイプなど複数の次元で割引を設定可能に。"),v("br"),_._v(" "),v("code",[_._v("user_discount_config_v2")]),_._v(" テーブルを用いて柔軟な割引ポリシーを管理。")]),_._v(" "),v("h3",{attrs:{id:"パフォーマンス最適化の成果"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#パフォーマンス最適化の成果"}},[_._v("#")]),_._v(" パフォーマンス最適化の成果")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("請求計算性能を300%向上")]),_._v("：SQL最適化およびキャッシュ導入により、月次請求処理時間を数時間から数十分へ短縮。")]),_._v(" "),v("li",[v("strong",[_._v("システム安定性の大幅向上")]),_._v("：監視・アラート機構の強化により、障害検知時間を80%短縮。")]),_._v(" "),v("li",[v("strong",[_._v("大規模データ処理対応")]),_._v("：数千万件の請求レコードを安定処理可能に。")])]),_._v(" "),v("h2",{attrs:{id:"_5-課題と経験のまとめ"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-課題と経験のまとめ"}},[_._v("#")]),_._v(" 5. 課題と経験のまとめ")]),_._v(" "),v("h3",{attrs:{id:"技術的課題"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#技術的課題"}},[_._v("#")]),_._v(" 技術的課題")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("データ整合性の確保")]),_._v("：分散環境下で課金データの一貫性を保つことが最大の課題。分散ロックとトランザクション補償を導入し、重要計算処理の整合性を保証。")]),_._v(" "),v("li",[v("strong",[_._v("複雑なビジネスロジック処理")]),_._v("：環境・製品ごとに異なる課金ルールを統合するため、柔軟な設定体系を設計し、ハードコーディングを排除。")]),_._v(" "),v("li",[v("strong",[_._v("性能ボトルネックの解消")]),_._v("：大規模データ処理時のDBボトルネックを、分割DB、リードライト分離、キャッシュ最適化で解決。")])]),_._v(" "),v("h3",{attrs:{id:"経験のまとめ"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#経験のまとめ"}},[_._v("#")]),_._v(" 経験のまとめ")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("設定駆動はハードコーディングに勝る")]),_._v("：複雑な業務システムでは、設定方式によるロジック制御の方が拡張性が高い。")]),_._v(" "),v("li",[v("strong",[_._v("監視を最初から設計に含める")]),_._v("：安定稼働を確保するため、初期段階から監視設計を考慮すべき。")]),_._v(" "),v("li",[v("strong",[_._v("データ安全とバックアップの重要性")]),_._v("：課金データは収益に直結するため、バックアップと復旧体制を必須とする。")]),_._v(" "),v("li",[v("strong",[_._v("段階的リファクタリング")]),_._v("：レガシーシステムには一括再構築ではなく段階的リファクタリングが効果的。")])]),_._v(" "),v("p",[_._v("このプロジェクトを通じて、分散システム設計やパフォーマンス最適化のスキルを大きく向上させることができ、クラウド課金ビジネスの複雑性を深く理解しました。"),v("br"),_._v("\nこれらの経験は、私の今後の技術的成長において非常に重要な基盤となりました。")])])}),[],!1,null,null,null);v.default=r.exports}}]);