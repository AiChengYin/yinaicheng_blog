(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{647:function(t,v,_){"use strict";_.r(v);var l=_(8),i=Object(l.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"算法概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法概述"}},[t._v("#")]),t._v(" 算法概述")]),t._v(" "),v("blockquote",[v("p",[t._v("什么是算法")])]),t._v(" "),v("p",[t._v("算法（Algorithm），即解决问题的方法。算法是一组有序的操作步骤，用于解决特定问题或完成特定任务。计算机中的算法指的是能够解决问题的、清晰可执行的计算机指令。算法可以用来处理数据、执行计算、自动化决策等。好的算法应该具有正确性、效率和可读性等特点。")]),t._v(" "),v("blockquote",[v("p",[t._v("算法特性")])]),t._v(" "),v("ul",[v("li",[t._v("正确性：算法应该能够正确地解决问题或完成任务。")]),t._v(" "),v("li",[t._v("可读性：算法应该易于理解和阅读，便于交流和维护。")]),t._v(" "),v("li",[t._v("有限性：在有限或合理的时间内可以执行完，尽量避免浪费时间和资源。这个时间可以很长，只是时间太长的算法不划算。")]),t._v(" "),v("li",[t._v("确定性：算法内部每个指令没有二义性，每个指令都是清晰的、计算机可执行的，但是结果不一定要确保一致，如随机算法。")]),t._v(" "),v("li",[t._v("可行性：确保算法可执行，假如算法要解决的问题是拿出最大的质数，这样的算法是不可行的。")]),t._v(" "),v("li",[t._v("可靠性：算法应该能够在不同的情况下保持稳定性和准确性。")]),t._v(" "),v("li",[t._v("通用性：算法应该适用于不同的输入数据，而不仅仅是某个特定的输入。\n"),v("ul",[v("li",[t._v("输入：有输入，算法的输入是更大的概念，比如一个函数，它没有输入参数，但是对于算法来说，函数有操作的对象，操作的对象就是算法的输入。")]),t._v(" "),v("li",[t._v("输出：有输出，这里的输出不是函数的返回值，比如算法要解决的问题是画一个圆，函数即使返回void，但是算法确实把圆画出来了，这个圆就是函数的输出。")])])])])])}),[],!1,null,null,null);v.default=i.exports}}]);