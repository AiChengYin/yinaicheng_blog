(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{358:function(a,t,i){a.exports=i.p+"assets/img/mysql_store_engine_1.74d6eeaf.jpg"},359:function(a,t,i){a.exports=i.p+"assets/img/mysql_store_engine_2.852133b3.jpg"},360:function(a,t,i){a.exports=i.p+"assets/img/mysql_logical_storage_structure.1ef5ad51.png"},553:function(a,t,i){"use strict";i.r(t);var l=i(8),n=Object(l.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"mysql存储引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql存储引擎"}},[a._v("#")]),a._v(" MySQL存储引擎")]),a._v(" "),t("h2",{attrs:{id:"存储文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储文件"}},[a._v("#")]),a._v(" 存储文件")]),a._v(" "),t("p",[a._v("MySQL的数据存储在磁盘上的数据文件中，而这些文件存储在操作系统文件系统中的特定目录中，这个目录通常称为数据目录或数据文件夹。\n在Linux系统中，MySQL的默认数据目录是/var/lib/mysql/，而在Windows系统中，默认数据目录是C:\\Program Files\\MySQL\\MySQL Server\\data\\。\n但是，实际存储位置可能因为MySQL的不同版本、安装方式、配置文件的设置而有所不同。可以通过查看MySQL的配置文件my.cnf或my.ini来确定实际数据目录的位置。"),t("br"),a._v("\nMySQL数据目录中的重要文件包括：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("ibdata1：在MySQL中，ibdata1是一个包含InnoDB表空间和其他重要元数据的文件。它是InnoDB存储引擎的核心文件之一，用于存储表和索引数据。它也包含了事务日志、回滚日志、系统表空间等元数据。在MySQL中，ibdata1文件是非常重要的，因为它包含了InnoDB存储引擎中的许多关键信息，包括数据和元数据。默认情况下，MySQL的ibdata1文件是只增不减的，因为它保存了所有的InnoDB表数据和索引信息。如果ibdata1文件超过了限制，可以通过以下两种方式来解决：")]),a._v(" "),t("ol",[t("li",[a._v("调整InnoDB的配置参数，使得MySQL不再向ibdata1文件中写入数据，而是向多个独立的表空间文件中写入数据。这样可以避免ibdata1文件过大，但需要重启MySQL服务来使配置生效。")]),a._v(" "),t("li",[a._v("对于已经过大的ibdata1文件，可以使用mysqldump命令将其中的数据导出，然后重新创建一个全新的MySQL实例，并将导出的数据重新导入。这种方法需要一定的时间和空间成本，但可以有效地减小ibdata1文件的大小。")])])]),a._v(" "),t("li",[t("p",[a._v("ib_logfile0和ib_logfile1：在MySQL的InnoDB存储引擎中，ib_logfile0和ib_logfile1是用于事务日志的文件。它们是循环使用的，可以用来记录所有正在进行的事务的修改。这些文件的大小可以通过配置文件进行设置。在MySQL中，如果事务日志文件大小达到了限制，MySQL会自动创建一个新的文件，以便继续记录事务日志。事务日志的作用是记录数据库中的所有修改操作，以便在发生故障时可以进行恢复。")])]),a._v(" "),t("li",[t("p",[a._v(".frm：MySQL的.frm文件是用来存储表定义（即表的结构信息）的文件，包括表中每个字段的名称、类型、长度、是否允许为NULL等信息。它是MySQL的存储引擎和MySQL服务器之间的接口，用于将表定义传递给存储引擎。当MySQL服务器启动时，会读取.frm文件，然后将表定义加载到内存中。在查询或修改表时，MySQL服务器会将表定义发送给存储引擎，以便存储引擎能够正确地处理数据。")])]),a._v(" "),t("li",[t("p",[a._v(".ibd：MySQL的.ibd文件是InnoDB存储引擎的数据文件，用于存储InnoDB表中的数据和索引信息。每个InnoDB表都有一个对应的.ibd文件，该文件包含了表的行数据、索引数据、MVCC信息等。InnoDB存储引擎是MySQL默认的事务型存储引擎，支持事务、行级锁、外键等高级特性，因此InnoDB表的数据存储在.ibd文件中。当使用ALTER TABLE命令对InnoDB表进行变更时，如增加或删除列、修改索引等，.ibd文件也会随之变更。在备份或迁移MySQL数据库时，.ibd文件也需要被同时备份或迁移。")])]),a._v(" "),t("li",[t("p",[a._v(".MYD：MyISAM表的数据文件，存储MyISAM表的数据。")])]),a._v(" "),t("li",[t("p",[a._v(".MYI：MyISAM表的索引文件，存储MyISAM表的索引。")])])]),a._v(" "),t("p",[a._v("除了这些文件之外，MySQL还可以使用其他一些文件来存储不同的数据，例如二进制日志文件（binlog）、错误日志文件（error log）和查询日志文件（query log）。")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":i(358),loading:"lazy"}})]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":i(359),loading:"lazy"}})]),a._v(" "),t("h2",{attrs:{id:"逻辑存储结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑存储结构"}},[a._v("#")]),a._v(" 逻辑存储结构")]),a._v(" "),t("p",[a._v("MySQL的存储结构如下：")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"","data-src":i(360),loading:"lazy"}})]),a._v(" "),t("ol",[t("li",[a._v("表空间（tablespace）：一个表空间是一个或多个数据文件的集合，用于存储表和索引数据。在InnoDB存储引擎中，所有的表和索引数据都存储在共享的表空间文件中，名为ibdata1。")]),a._v(" "),t("li",[a._v("段（segment）：一个段是一个连续的数据结构，它用于在表空间中存储一个表或索引的数据。每个表和索引都有自己的段，像innodb存储引擎表，非叶子节点存索引，这叫做索引段，叶子节点存数据，这叫做数据段。数据段下面有数据区，数据区下面有数据页，数据页下面有数据行；索引段下面有索引区，索引区下面有索引页，索引页下面有索引行。")]),a._v(" "),t("li",[a._v("区（extent）：一个区是由连续的页组成的数据块，用于在段中存储数据。每个区的大小通常为1MB。")]),a._v(" "),t("li",[a._v("页（page）：一个页是在区中存储数据的最小单位。在InnoDB存储引擎中，每个页的大小通常为16KB。因为一个页中必须要存放页头、页目录、页控制信息等元数据信息，因此实际可以存放的数据大小会比16KB略小。MySQL中规定一个页中至少存放两行记录，所以每一行记录最多8K容量。")]),a._v(" "),t("li",[a._v("行（row）：一个行是在页中存储的最小单位。每个行包含表中的一条记录，包括所有的列和相应的值。通常，一个包含数据的行由以下几部分组成：\n"),t("ul",[t("li",[a._v("固定长度的数据：包括列的数据类型为整数、日期、布尔值等的列的实际数据。")]),a._v(" "),t("li",[a._v("可变长度的数据：包括列的数据类型为字符串、文本、二进制、LOB（大对象）等的列的实际数据。")]),a._v(" "),t("li",[a._v("空位图（null bitmap）：用于表示哪些列的值为NULL。")]),a._v(" "),t("li",[a._v("Txt ID：用于指向存储文本数据的页中的文本数据元素的指针，如果行包含LOB类型的数据，则包含Txt ID。")]),a._v(" "),t("li",[a._v("Roll Pointer：用于指向回滚段中的数据，用于实现事务回滚和MVCC。")]),a._v(" "),t("li",[a._v("综上所述，MySQL的存储结构是由多个表空间、段、区、页和行组成的。在这个结构中，表空间是最高级别的概念，段是表和索引的存储单元，区是段的存储单元，页是区的存储单元，行是页的存储单元。这种分层结构可以提高数据的读取和写入效率，并且可以更好地管理和维护数据。")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);